C51 COMPILER V9.59.0.0   MAIN                                                              09/29/2024 11:04:07 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Worksoftware\Keil\ARM\C51\BIN\C51.EXE User\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\Hardw
                    -are;.\Startup;.\Readme) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          
   3          Version: 0.0.0
   4          Check out the Readme.txt for more details 
   5           
   6          */
   7           
   8          //系统库
   9          #include "main.h"
  10          #include <stdio.h>
  11          
  12          //外设库
  13          #include "gpio.h"
  14          #include "timer.h"
  15          #include "key.h"
  16          #include "seg.h"
  17          //#include "eeprom.h"
  18          #include "config.h"
  19          
  20          //-----------功能选择区-----------
  21          
  22          
  23          //程序执行函数
  24          void Key_Proc(void);       //Keystroke process function
  25          void Disp_Proc(void);      //LCD Dsiplay process function
  26          
  27          //自定义功能函数 
  28          void Delay(unsigned int delay); //定时器延时 会卡住当前函数，但不会影响整个代码
  29          void Peripheral_Init(void);//外设初始化函数
  30          
  31          //----------------可能需要修改的变量-------------------------------------
  32          
  33          //刷新计数,按键10ms扫描一次,数码管200ms刷新一次
  34          u16 key_slow_down = 0; //按键刷新计数
  35          u16 disp_slow_down = 0; //显示刷新计数
  36          
  37          /*按键相关变量*/
  38          u16 key_tick;        //long key press count
  39          bit key_sw = 1;
  40          bit keylong = 1;
  41          
  42          u8 key_value = 0;       //按键值
  43          u8 key_down;            //按键下降沿
  44          u8 key_up;              //上升沿
  45          u8 key_old;             //上次的按键值
  46          
  47          u16 delay_tick;         //软件延时计数
  48          
  49          /*数码管显示相关变量*/
  50          char seg_string[4];     //数码管显示字符串
  51          char seg_buf1[4];       //数码管1显示缓冲区
  52          char seg_buf2[4];       //数码管2显示缓冲区
  53          
  54          u8 LED_buf;           //按键下LED控制 0b0011 1111 1为亮 0为灭
C51 COMPILER V9.59.0.0   MAIN                                                              09/29/2024 11:04:07 PAGE 2   

  55          u8 pos = 0;             //数码管段选
  56          
  57          /*外设相关变量*/
  58          u16 buzzer_tick;        //蜂鸣器短响计数
  59          
  60          /*代码控制变量*/
  61          u8 mode;                //模式切换
  62          
  63          void main(){
  64   1        GPIO_Init();      //引脚初始化
  65   1        Timer1_Init();    //定时器初始化
  66   1        EA = 1;           //打开总中断
  67   1        Config_Init();    //初始化配置
  68   1        Peripheral_Init();//外设函数初始状态
  69   1        
  70   1        while(1)
  71   1        {
  72   2          Key_Proc();
  73   2          Disp_Proc();
  74   2          LED1 = 0;
  75   2          LED2 = 0;
  76   2          LED3 = 0;   
  77   2          
  78   2        }
  79   1      } 
  80          
  81          //================中断函数=======================
  82          void Timer1_Isr(void) interrupt 3   //1ms 中断一次
  83          {
  84   1        //本中断函数内全是赋值，没有运算，每次中断时间不会过长
  85   1        if(++key_slow_down == 10) key_slow_down = 0;   //10ms扫描一次按键
  86   1        if(++disp_slow_down == 200) disp_slow_down = 0;//200ms刷新一次数码管
  87   1         
  88   1      //--------------------1s定时器---------------------------
  89   1        
  90   1      
  91   1      //--------------------外设控制---------------------------
  92   1        
  93   1        //按键长短按计时
  94   1        if(key_tick > 0) key_tick--;  
  95   1          
  96   1        //软件延时
  97   1        if(delay_tick > 0) delay_tick--;//延时函数 使用会卡住当前函数，但不影响其他功能
  98   1          
  99   1        //数码管段选刷新
 100   1      
 101   1        Seg_Disp1(seg_buf1,pos);
 102   1        Seg_Disp2(seg_buf2,pos);
 103   1        if(++pos > 3) pos = 0;
 104   1      }
 105          
 106          //================按键逻辑函数=======================
 107          void Key_Proc(void)        //Keystroke process function
 108          {
 109   1        if(key_slow_down) return;   //10ms进入一次此函数
 110   1          key_slow_down = 1;
 111   1          
 112   1        key_value = Key_Scan(); //读取键值 强制消抖
 113   1        key_down = key_value & (key_value ^ key_old); //下降沿
 114   1        key_up = ~key_value & (key_value ^ key_old);  //上升沿
 115   1        key_old = key_value;
 116   1        
C51 COMPILER V9.59.0.0   MAIN                                                              09/29/2024 11:04:07 PAGE 3   

 117   1        if(key_down)       //长按3秒
 118   1          key_tick = 3000;
 119   1        
 120   1         //key_old键值 tick按下计数  long自锁，保证按键代码只触发一次
 121   1        if(key_old && key_tick == 0 && keylong){
 122   2          keylong = 0;    
 123   2          if(key_old == 1){     //长按童锁键    
 124   3            //------按键1长按功能--------
 125   3            
 126   3            //------按键1长按功能--------       
 127   3          }
 128   2          if(key_old == 4){ //长按磁化键  
 129   3            //------按键4长按功能--------
 130   3      
 131   3            //------按键4长按功能--------   
 132   3          }
 133   2        }
 134   1        
 135   1        if(key_up) //keydown-keyup顺序不能更改
 136   1          keylong = 1;
 137   1        
 138   1        if(key_tick && key_sw){
 139   2          switch(key_up)
 140   2          {
 141   3            case 1://锁键1
 142   3            {     
 143   4              ADIG1 ^=1;
 144   4              break;
 145   4            }
 146   3            case 2://按键2
 147   3            {
 148   4              LED2 ^= 1;
 149   4              break;
 150   4            }
 151   3            case 3://按键3
 152   3            {
 153   4              LED3 ^= 1;
 154   4              break;
 155   4            }
 156   3            case 4://按键4
 157   3            {  
 158   4              mode++;
 159   4              break;                             
 160   4            }                                    
 161   3            default:                             
 162   3              break;
 163   3          }
 164   2        }
 165   1          
 166   1      }
 167          
 168          //================显示逻辑函数=======================
 169          void Disp_Proc(void)       //LCD Dsiplay process function
 170          {
 171   1        if(disp_slow_down) return;   //200ms进入一次此函数(200ms刷新一次屏幕)
 172   1          disp_slow_down = 1;
 173   1        
 174   1        
 175   1        sprintf(seg_string,"%02d",(unsigned int)mode); //调试
 176   1        Led_Trans(seg_string,seg_buf1);   
 177   1        sprintf(seg_string,"%2d",(unsigned int)mode);
 178   1        Led_Trans(seg_string,seg_buf2); 
C51 COMPILER V9.59.0.0   MAIN                                                              09/29/2024 11:04:07 PAGE 4   

 179   1        
 180   1      }
 181          
 182          //================自定义函数=======================
 183          
 184          //定时器延时 会卡住当前函数，但不会影响整个代码
 185          void Delay(unsigned int delay) 
 186          {
 187   1        delay_tick = delay;
 188   1        while(delay_tick > 0);
 189   1      }
 190          
 191          /*
 192          tick: 蜂鸣器响的时间ms
 193          */
 194          void Buzzer_Ctrl(u16 tick)  
 195          {
 196   1        buzzer_tick = tick;
 197   1      }
 198          
 199          void Peripheral_Init(void)//外设初始化函数
 200          {
 201   1        Buzzer_Ctrl(200);//上电短响200ms一次
 202   1        LED_buf = 0x30;
 203   1       
 204   1      }
 205          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    433    ----
   CONSTANT SIZE    =      9    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     29    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
